(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{DllT:function(t,n){t.exports='<h1>Get controls</h1>\r\n\r\n<app-doc-component header="Example"\r\n                   description="If you ever have the need to query the form-controls of your form for example, you can do this with the following method.">\r\n  <![CDATA[\r\n  <m4-input></m4-input>\\n\r\n  <m4-spinner></m4-spinner>\\n\r\n  <m4-slider></m4-slider>\\n\r\n  <m4-checkbox></m4-checkbox>\\n\r\n  <m4-switch></m4-switch>\\n\r\n  <m4-file-input></m4-file-input>\r\n  ]]>\r\n  <div lang>\r\n    <![CDATA[\r\n    \\f:(ts)\r\n    @ViewChildren(ControlBase) controls: QueryList<ControlBase<any>>;\r\n    ]]>\r\n  </div>\r\n</app-doc-component>\r\n\r\n<div class="remark info">\r\n  ng-metro4 provides a type alias <code>ControlBase</code> for all form-control elements to give you this option.\r\n</div>\r\n'},EpOr:function(t,n,e){"use strict";e.r(n);var r=e("8Y7J"),i=e("iInd"),o=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)};let l=class{constructor(){}ngOnInit(){}};l=function(t,n,e,r){var i,o=arguments.length,l=o<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(t,n,e,r);else for(var c=t.length-1;c>=0;c--)(i=t[c])&&(l=(o<3?i(l):o>3?i(n,e,l):i(n,e))||l);return o>3&&l&&Object.defineProperty(n,e,l),l}([Object(r.n)({selector:"app-get-controls",template:e("DllT"),styles:[e("h+iu")]}),o("design:paramtypes",[])],l);var c=e("2460"),a=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)};let s=class{constructor(){this.lists=c.f}ngOnInit(){}};const p=[{path:"get-controls",component:l},{path:"lists",component:s=function(t,n,e,r){var i,o=arguments.length,l=o<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(t,n,e,r);else for(var c=t.length-1;c>=0;c--)(i=t[c])&&(l=(o<3?i(l):o>3?i(n,e,l):i(n,e))||l);return o>3&&l&&Object.defineProperty(n,e,l),l}([Object(r.n)({selector:"app-lists",template:e("oL2u"),styles:[e("HYNW")]}),a("design:paramtypes",[])],s)}];let f=class{};f=function(t,n,e,r){var i,o=arguments.length,l=o<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(t,n,e,r);else for(var c=t.length-1;c>=0;c--)(i=t[c])&&(l=(o<3?i(l):o>3?i(n,e,l):i(n,e))||l);return o>3&&l&&Object.defineProperty(n,e,l),l}([Object(r.J)({imports:[i.f.forChild(p)],exports:[i.f]})],f);var y=e("PCNd");e.d(n,"MoreModule",function(){return u});let u=class{};u=function(t,n,e,r){var i,o=arguments.length,l=o<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(t,n,e,r);else for(var c=t.length-1;c>=0;c--)(i=t[c])&&(l=(o<3?i(l):o>3?i(n,e,l):i(n,e))||l);return o>3&&l&&Object.defineProperty(n,e,l),l}([Object(r.J)({declarations:[l,s],imports:[y.a,f]})],u)},HYNW:function(t,n){t.exports=""},"h+iu":function(t,n){t.exports=""},oL2u:function(t,n){t.exports='<h1>Lists</h1>\r\n\r\n<div class="remark success">\r\n  ng-metro4 provides dictionaries for all type of data. You can simply query information if you need them.\r\n</div>\r\n\r\n<h2>Available lists</h2>\r\n\r\n<ul>\r\n  <li>iconDictionary</li>\r\n  <li>iconCategoryDictionary</li>\r\n  <li>colorDictionary</li>\r\n  <li>animationDictionary</li>\r\n  <li>accentDictionary</li>\r\n  <li>inputDictionary</li>\r\n  <li>calendarButtonDictionary</li>\r\n  <li>widePointDictionary</li>\r\n  <li>positionHorizontalDictionary</li>\r\n  <li>spinnerButtonPositionDictionary</li>\r\n  <li>positionVerticalDictionary</li>\r\n  <li>positionBaseDictionary</li>\r\n  <li>positionDictionary</li>\r\n  <li>sizeDictionary</li>\r\n  <li>gravatarDictionary</li>\r\n  <li>activityDictionary</li>\r\n  <li>activityStyleDictionary</li>\r\n  <li>buttonShapeDictionary</li>\r\n  <li>buttonSpecialDictionary</li>\r\n  <li>popoverTriggerDictionary</li>\r\n  <li>progressTypeDictionary</li>\r\n  <li>roundTypeDictionary</li>\r\n  <li>thinDictionary</li>\r\n  <li>easingDictionary</li>\r\n</ul>\r\n\r\n<app-doc-component header="Example usage" [values]="{ lists: lists }">\r\n  <![CDATA[\r\n  <span [innerHTML]="lists.colors() | json"></span>\r\n  ]]>\r\n</app-doc-component>\r\n'}}]);